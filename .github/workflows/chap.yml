name: Run Chap

on:
  push:

jobs:
  run-vmwarechap:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2 
        with:
          ref: 2bb8fbd0a864d98398598243700bf6b787a3fa05

      - name: Install Bison 3.1
        run: |
          wget http://ftp.gnu.org/gnu/bison/bison-3.1.tar.gz
          tar -xzvf bison-3.1.tar.gz
          cd bison-3.1
          ./configure
          make
          sudo make install
      
      - name: Install dependencies for project
        run: | 
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool re2c libxml2

      - name: Build repository 
        run: | 
          ./buildconf
          ./configure && make
      
      - name: Install Chap dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake 

      - name: Clone chap repository and build
        run: |
          git clone https://github.com/vmware/chap.git /tmp/chap
          cd /tmp/chap
          git submodule update --init --recursive
          mkdir build-chap
          cd build-chap
          cmake ../
          make
      
      - name: Run VMware Chap Analyzer
        run: |
          set +e

          directory="$GITHUB_WORKSPACE"
          ulimit -c unlimited

          find "$directory" -name "*.so" -exec sh -c '
              for so_file do
                  "$so_file"
              done
          ' sh {} +

          commands=("count" "describe" "dump" "enumerate" "explain" "list" "show" "summarize")
          sub_commands=("allocations" "anchored" "anchorpoints" "externalanchored" "externalanchorpoints" "free" "inaccessible" "leaked" "readonly" "registeranchored" "registeranchorpoints" "rxonly" "stackanchorpoints")

          for core_file in /var/lib/apport/coredump/*; do
              if [ -f "$core_file" ]; then
                  for command in "${commands[@]}"; do
                      for sub_command in "${sub_commands[@]}"; do
                          /tmp/chap/build-chap/chap "$core_file" <<EOF
                          $command $sub_command
          EOF
                      done
                  done
              fi
          done
